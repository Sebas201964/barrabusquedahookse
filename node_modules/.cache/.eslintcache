[{"C:\\Users\\USER\\Documents\\GitHub\\barrabusquedahookse\\src\\index.js":"1","C:\\Users\\USER\\Documents\\GitHub\\barrabusquedahookse\\src\\reportWebVitals.js":"2","C:\\Users\\USER\\Documents\\GitHub\\barrabusquedahookse\\src\\Historialficha.js":"3"},{"size":528,"mtime":1677549676475,"results":"4","hashOfConfig":"5"},{"size":375,"mtime":1677545782077,"results":"6","hashOfConfig":"5"},{"size":3426,"mtime":1677728365067,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ht0sgb",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"C:\\Users\\USER\\Documents\\GitHub\\barrabusquedahookse\\src\\index.js",[],"C:\\Users\\USER\\Documents\\GitHub\\barrabusquedahookse\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Documents\\GitHub\\barrabusquedahookse\\src\\Historialficha.js",["15","16"],"import './Historialficha.css';\r\nimport {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport * as XLSX from 'xlsx/xlsx.mjs';\r\n\r\nfunction Historial_ficha() {\r\n\r\n  const [ficha, setFichas]= useState([]);\r\n  const [tablaFichas, setTablaFichas]= useState([]);\r\n  const [busqueda, setBusqueda]= useState(\"\");\r\n  \r\n  var XLSX = require(\"xlsx\");\r\n  const generateExcel = () => {\r\n    // Obtener la tabla\r\n    const table = document.getElementById('my-table');\r\n\r\n    // Convertir la tabla en un objeto de datos de Excel\r\n    const workbook = XLSX.utils.table_to_book(table);\r\n\r\n    // Descargar el archivo Excel\r\n    XLSX.writeFile(workbook, 'HISTORIAL FICHA.xlsx');\r\n  }\r\n\r\nconst peticionGet=async()=>{\r\n  await axios.get(\"http://localhost:8082/api/ficha/listar\")\r\n  .then(response=>{\r\n    setFichas(response.data);\r\n    setTablaFichas(response.data);\r\n  }).catch(error=>{\r\n    console.log(error);\r\n  })\r\n}\r\n\r\nconst handleChange=e=>{\r\n  setBusqueda(e.target.value);\r\n  filtrar(e.target.value);\r\n}\r\n\r\nconst filtrar=(terminoBusqueda)=>{\r\n  var resultadosBusqueda=tablaFichas.filter((elemento)=>{\r\n    if(elemento.id_ficha.toString().toLowerCase().includes(terminoBusqueda.toLowerCase())\r\n    || elemento.persona.id_persona.toString().toLowerCase().includes(terminoBusqueda.toLowerCase())\r\n    || elemento.fecha_consulta.toString().toLowerCase().includes(terminoBusqueda.toLowerCase())\r\n    || elemento.persona.nombre.toString().toLowerCase().includes(terminoBusqueda.toLowerCase())+elemento.persona.apellido.toString().toLowerCase().includes(terminoBusqueda.toLowerCase())\r\n    ){\r\n      return elemento;\r\n    }\r\n  });\r\n  setFichas(resultadosBusqueda);\r\n}\r\n\r\nuseEffect(()=>{\r\npeticionGet();\r\n},[])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <div className=\"containerInput\">\r\n        <input\r\n          className=\"form-control inputBuscar\"\r\n          value={busqueda}\r\n          placeholder=\"BÃºsqueda por Id Ficha,Id Persona, Fecha, Nombre\"\r\n          onChange={handleChange}\r\n        />\r\n        <button className=\"btn btn-success\">\r\n          <FontAwesomeIcon icon={faSearch}/>\r\n        </button>\r\n      </div>\r\n\r\n     <div className=\"table-responsive\">\r\n       <table id=\"my-table\" className=\"table table-sm table-bordered\">\r\n         <thead>\r\n           <tr>\r\n             <th>ID</th>\r\n             <th>DIAGNOSTICO</th>\r\n             <th>FECHA</th>\r\n             <th>MOTIVO</th>\r\n             <th>OBSERVACIONES</th>\r\n             <th>ID PERSONA</th>\r\n             <th>NOMBRE</th>\r\n           </tr>\r\n         </thead>\r\n\r\n         <tbody>\r\n           {ficha && \r\n           ficha.map((ficha)=>(\r\n             <tr key={ficha.id_ficha}>\r\n               <td>{ficha.id_ficha}</td>\r\n               <td>{ficha.diagnostico}</td>\r\n\r\n               <td>{ficha.fecha_consulta}</td>\r\n               <td>{ficha.motivo_consulta}</td>\r\n               <td>{ficha.observaciones}</td>\r\n               <td>{ficha.persona.id_persona}</td>\r\n               <td>{ficha.persona.nombre+\" \"+ficha.persona.apellido}</td>\r\n             </tr>\r\n           ))}\r\n         </tbody>\r\n\r\n       </table>\r\n      \r\n     </div>\r\n     <button onClick={generateExcel} className=\"mi-boton\">IMPRIMIR</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Historial_ficha;\r\n",{"ruleId":"17","severity":1,"message":"18","line":7,"column":13,"nodeType":"19","messageId":"20","endLine":7,"endColumn":17},{"ruleId":"21","severity":1,"message":"22","line":43,"column":55,"nodeType":"23","messageId":"24","endLine":43,"endColumn":57},"no-unused-vars","'XLSX' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]